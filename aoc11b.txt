#!/usr/bin/env python3

import aoc

data_in = aoc.read_input_aslist()[0]
#data_in = aoc.read_example_aslist()[0]

big_table = {}

def do_stone(stone, blinks_left):
    stones_out = []
    if (stone, blinks_left) in big_table:
        return big_table[(stone, blinks_left)]
    if stone == "0":
        stones_out = ["1"]
    elif len(stone) % 2 == 0:
        stones_out = [f"{int(stone[:len(stone)//2])}",
                      f"{int(stone[len(stone)//2:])}"
                      ]
    else:
        stones_out = [f"{int(stone) * 2024}"]
    if blinks_left == 1:
        return len(stones_out)
    total_len = 0
    for s in stones_out:
        total_len += do_stone(s, blinks_left-1)
    big_table[(stone, blinks_left)] = total_len
    return total_len

final_len = 0
for s in data_in:
    final_len += do_stone(s, 75)
print(final_len)
